name: ALLCLL CI/CD
on:
  push:
    branches: [develop]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  client-deploy:
    name: client-build/deploy
    runs-on: ubuntu-latest
    env:
      working-directory: ./
      project-directory: ./packages/client

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'

      - name: Install NPM packages
        run: |
          npm install -g pnpm
          pnpm i --frozen-lockfile
        working-directory: ${{env.working-directory}}

      - name: Build Client project
        run: |
          pnpm run build-client
          cd ${{env.project-directory}}
        env:
          CI: ''
#          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
#          VITE_SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
#          VITE_GOOGLE_ANALYTICS_ID: ${{ secrets.GOOGLE_ANALYTICS_ID }}
#          VITE_CLARITY_PROJECT_ID: ${{ secrets.CLARITY_PROJECT_ID }}
          VITE_API_BASE_URL: ${{ secrets.DEV_API_BASE_URL }}
          VITE_DEV_SERVER: true
        working-directory: ${{env.working-directory}}

      - name: Upload production-ready build files
        uses: actions/upload-artifact@v4
        with:
          name: development-files
          path: ${{env.project-directory}}/dist

#      - name: Download artifact
#        uses: actions/download-artifact@v4
#        with:
#          name: production-files
#          path: ./build

#      - name: Deploy to gh-pages
#        uses: peaceiris/actions-gh-pages@v3
#        with:
#          github_token: ${{ secrets.GIT_TOKEN }}
#          publish_dir: ${{env.project-directory}}/build
#          publish_branch: 'gh-dev-pages'

      - name: Deploy to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.DEV_AWS_BUCKET_NAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.DEV_AWS_DEFAULT_REGION }}
          SOURCE_DIR: ${{env.project-directory}}/dist

      - name: Invalidate CloudFront
        uses: chetan/invalidate-cloudfront-action@master
        env:
          PATHS: '/*'
          AWS_ACCESS_KEY_ID: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.DEV_AWS_DEFAULT_REGION }}
          DISTRIBUTION: ${{ secrets.DEV_AWS_DISTRIBUTION_ID }}

  client-test:
    runs-on: ubuntu-latest
    needs: client-deploy
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install NPM packages
        run: |
          npm install -g pnpm
          pnpm i --frozen-lockfile

      - name: Install Playwright Browsers
        run: |
          cd ./packages/e2e
          npx playwright install --with-deps
      - name: Run Playwright tests
        run: |
          pnpm run test
        env:
          VITE_TEST_ENV: ${{ secrets.DEV_TEST_ENV }}
          # Add any other environment variables needed for your tests here

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
