name: ALLCLL CI/CD
on:
  push:
    branches: [develop]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  client-build:
    name: client-build
    runs-on: ubuntu-latest
    env:
      working-directory: ./
      project-directory: ./packages/client

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '18.13.0'

      - name: Install NPM packages
        run: |
          npm install -g pnpm
          pnpm i --frozen-lockfile
        working-directory: ${{env.working-directory}}

      - name: Build Client project
        run: |
          pnpm run build-client
          cd ${{env.project-directory}}
          mkdir -p ./build
          cp -r dist ./build
          cp package.json ./build/package.json
          cp pnpm-lock.yaml ./build/pnpm-lock.yaml
        env:
          CI: ''
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          VITE_SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          VITE_GOOGLE_ANALYTICS_ID: ${{ secrets.GOOGLE_ANALYTICS_ID }}
          VITE_AMPLITUDE_API_KEY: ${{ secrets.AMPLITUDE_API_KEY }}
          VITE_SCORE_API_TOKEN: ${{ secrets.SCORE_API_TOKEN }}
          VITE_DEV_SERVER: true
        working-directory: ${{env.working-directory}}

      #    - name: Run tests
      #      run: npm run test
      #      working-directory: ${{env.working-directory}}

      - name: Upload production-ready build files
        uses: actions/upload-artifact@v4
        with:
          name: production-files
          path: ${{env.project-directory}}/build

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: production-files
          path: ./build

      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GIT_TOKEN }}
          publish_dir: ${{env.project-directory}}/build

  Deploy:
    runs-on: ubuntu-latest
    needs: client-build

    steps:
      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          #passphrase: ${{ secrets.PASSPHRASE }}
          port: 22
          script: |
            cd ${{ secrets.PWD }}
            sudo git pull https://${{ secrets.GIT_TOKEN }}:x-oauth-basic@github.com/allcll/frontend.git gh-pages
            sudo systemctl reload nginx
            # 필요한 cmd 명령어 사용
